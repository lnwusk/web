name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 代码质量检查
  lint:
    name: Lint & Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run frontend linting
      working-directory: ./frontend
      run: npm run lint
      
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Run backend linting (if available)
      working-directory: ./backend
      run: npm run lint || echo "No lint script found"

  # 前端测试和构建
  frontend:
    name: Frontend Test & Build
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run tests (if available)
      working-directory: ./frontend
      run: npm test || echo "No test script found"
      
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ./frontend/dist
        retention-days: 7

  # 后端测试
  backend:
    name: Backend Test
    runs-on: ubuntu-latest
    needs: lint
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test123456
          MYSQL_DATABASE: sports_room_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Create test environment file
      working-directory: ./backend
      run: |
        cat > .env.test << EOF
        DB_HOST=localhost
        DB_PORT=3306
        DB_NAME=sports_room_test
        DB_USER=root
        DB_PASSWORD=test123456
        JWT_SECRET=test_secret_key
        NODE_ENV=test
        EOF
      
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"localhost" -P"3306" --silent; do
          sleep 1
        done
        
    - name: Run backend tests (if available)
      working-directory: ./backend
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_NAME: sports_room_test
        DB_USER: root
        DB_PASSWORD: test123456
        JWT_SECRET: test_secret_key
        NODE_ENV: test
      run: npm test || echo "No test script found"

  # 集成测试
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test123456
          MYSQL_DATABASE: sports_room_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Download frontend build
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./frontend/dist
        
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Start backend server
      working-directory: ./backend
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_NAME: sports_room_test
        DB_USER: root
        DB_PASSWORD: test123456
        JWT_SECRET: test_secret_key
        NODE_ENV: test
      run: |
        npm start &
        sleep 10
        
    - name: Run integration tests (if available)
      run: |
        # 这里可以添加集成测试脚本
        echo "Integration tests would run here"
        # 例如：npm run test:integration

  # 安全扫描
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit
      run: |
        cd frontend && npm audit --audit-level=moderate || true
        cd ../backend && npm audit --audit-level=moderate || true
        
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # 部署准备
  deploy-prep:
    name: Deploy Preparation
    runs-on: ubuntu-latest
    needs: [frontend, backend, integration, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download frontend build
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        
    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp -r frontend/dist deployment/frontend
        cp -r backend deployment/backend
        cp README.md deployment/
        
    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: ./deployment
        retention-days: 30 